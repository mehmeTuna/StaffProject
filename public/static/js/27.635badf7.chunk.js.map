{"version":3,"sources":["views/ProjectManagementList/components/Header/Header.js","views/ProjectManagementList/components/ProjectCard/ProjectCard.js","views/ProjectManagementList/ProjectManagementList.js","views/ProjectManagementList/index.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","classes","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","RouterLink","to","theme","display","flexWrap","marginBottom","content","padding","flexGrow","justifyContent","breakpoints","down","width","paddingBottom","header","maxWidth","flexBasis","avatar","marginRight","stats","actions","ProjectCard","project","statusColors","colors","grey","Card","CardContent","Avatar","alt","src","author","getInitials","name","Link","noWrap","style","size","results","marginTop","ProjectManagementList","useState","projects","setProjects","useEffect","mounted","axios","get","then","response","data","title","onFilter","onSearch","map","key","id"],"mappings":"sNAOMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAqDOC,EAlDA,SAAAC,GAAU,IACfC,EAAuBD,EAAvBC,UAAcC,EADA,YACSF,EADT,eAGhBG,EAAUP,IAEhB,OACE,yCACMM,EADN,CAEED,UAAWG,YAAKD,EAAQL,KAAMG,KAE9B,kBAACI,EAAA,EAAD,CACEC,WAAW,WACXC,WAAS,EACTC,QAAQ,gBACRC,QAAS,GAET,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,UAAU,KACVC,cAAY,EACZC,QAAQ,YAHV,cAOA,kBAACH,EAAA,EAAD,CACEC,UAAU,KACVE,QAAQ,MAFV,UAOF,kBAACT,EAAA,EAAD,CAAMK,MAAI,GACR,kBAACK,EAAA,EAAD,CACEC,MAAM,UACNJ,UAAWK,IACXC,GAAG,gBACHJ,QAAQ,aAJV,iB,kECzBJlB,EAAYC,aAAW,SAAAsB,GAAK,YAAK,CACnCrB,KAAM,CACFsB,QAAS,OACTd,WAAY,SACZe,SAAU,OACVC,aAAcH,EAAMV,QAAQ,IAEhCc,SAAO,GACHC,QAASL,EAAMV,QAAQ,GACvBgB,SAAU,EACVL,QAAS,OACTd,WAAY,SACZoB,eAAgB,iBALb,cAOCP,EACKQ,YACAC,KAAK,MACX,CACCC,MAAO,OACPR,SAAU,SAZX,cAcH,eAAgB,CACZS,cAAeX,EAAMV,QAAQ,KAf9B,GAkBPsB,OAAO,aACHC,SAAU,OACVH,MAAO,IACPT,QAAS,QAELD,EACKQ,YACAC,KAAK,MACX,CACCN,aAAcH,EAAMV,QAAQ,GAC5BwB,UAAW,SAGnBC,OAAQ,CACJC,YAAahB,EAAMV,QAAQ,IAE/B2B,MAAM,aACFZ,QAASL,EAAMV,QAAQ,IAEnBU,EACKQ,YACAC,KAAK,MACX,CACCK,UAAW,QAGnBI,QAAQ,aACJb,QAASL,EAAMV,QAAQ,IAEnBU,EACKQ,YACAC,KAAK,MACX,CACCK,UAAW,YAyFRK,EApFK,SAAAtC,GAAU,IAEtBuC,EAGAvC,EAHAuC,QACAtC,EAEAD,EAFAC,UACGC,EAJkB,YAKrBF,EALqB,yBAOnBG,EAAUP,IAEV4C,EACS,UACIC,IAAOC,KAAK,KAG/B,OACI,kBAACC,EAAA,EAAD,iBAAUzC,EAAV,CAAgBD,UAAWG,YAAKD,EAAQL,KAAMG,KAC1C,kBAAC2C,EAAA,EAAD,CAAa3C,UAAWE,EAAQoB,SAC5B,yBAAKtB,UAAWE,EAAQ4B,QACpB,kBAACc,EAAA,EAAD,CAAQC,IAAI,SAAS7C,UAAWE,EAAQ+B,OAAQa,IAAKR,EAAQS,OAAOd,QAC/De,YAAYV,EAAQS,OAAOE,OAEhC,6BACI,kBAACC,EAAA,EAAD,CAAMnC,MAAM,cAAcJ,UAAWK,IAAYmC,QAAM,EAAClC,GAAG,IAAIJ,QAAQ,MAAvE,aAGA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,aACe,IACX,kBAACqC,EAAA,EAAD,CACInC,MAAM,cACNJ,UAAWK,IACXC,GAAG,0BACHJ,QAAQ,MAJZ,iBAUZ,yBAAKb,UAAWE,EAAQiC,OACpB,kBAACzB,EAAA,EAAD,CAAYG,QAAQ,MAApB,WAGA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,kBAEJ,yBAAKb,UAAWE,EAAQiC,OACpB,kBAACzB,EAAA,EAAD,CAAYG,QAAQ,MAApB,QACA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,UAEJ,yBAAKb,UAAWE,EAAQiC,OACpB,kBAACzB,EAAA,EAAD,CAAYG,QAAQ,MAApB,cAGA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,QAEJ,yBAAKb,UAAWE,EAAQiC,OACpB,kBAACzB,EAAA,EAAD,CAAYG,QAAQ,MAApB,cAGA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,aAEJ,yBAAKb,UAAWE,EAAQiC,OACpB,kBAACzB,EAAA,EAAD,CACI0C,MAAO,CACPrC,MAAOwB,GAEP1B,QAAQ,MAJZ,gBAOA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,SAApB,mBAEJ,yBAAKb,UAAWE,EAAQkC,SACpB,kBAACtB,EAAA,EAAD,CAAQC,MAAM,UAAUsC,KAAK,QAAQxC,QAAQ,YAA7C,YC/IdlB,EAAYC,aAAW,SAAAsB,GAAK,MAAK,CACrCrB,KAAM,CACJ0B,QAASL,EAAMV,QAAQ,IAEzB8C,QAAS,CACPC,UAAWrC,EAAMV,QAAQ,QAqDdgD,EAjDe,WAC5B,IAAMtD,EAAUP,IADkB,EAEZ8D,mBAAS,IAFG,uBAGnBA,mBAAS,IAHU,uBAIFA,mBAAS,KAJP,mBAI3BC,EAJ2B,KAIjBC,EAJiB,KAMlCC,qBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,iBAAiBC,MAAK,SAAAC,GAC1BJ,GACFF,EAAYM,EAASC,KAAKR,aAOzB,WACLG,GAAU,KAEX,IAKH,OACE,kBAAC,IAAD,CACE7D,UAAWE,EAAQL,KACnBsE,MAAM,2BAEN,kBAAC,EAAD,MACA,kBAAC,IAAD,CACEC,SAVe,aAWfC,SAVe,eAYjB,yBAAKrE,UAAWE,EAAQoD,SACrBI,EAASY,KAAI,SAAAhC,GAAO,OACnB,kBAAC,EAAD,CACEiC,IAAKjC,EAAQkC,GACblC,QAASA,UC1DrB","file":"static/js/27.635badf7.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Staff\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            component={RouterLink}\n            to=\"/staff/create\"\n            variant=\"contained\"\n          >\n            Add Staff\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {makeStyles} from '@material-ui/styles';\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardContent,\n    Link,\n    Typography,\n    colors\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        marginBottom: theme.spacing(2)\n    },\n    content: {\n        padding: theme.spacing(2),\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        [\n            theme\n                .breakpoints\n                .down('sm')\n        ]: {\n            width: '100%',\n            flexWrap: 'wrap'\n        },\n        '&:last-child': {\n            paddingBottom: theme.spacing(2)\n        }\n    },\n    header: {\n        maxWidth: '100%',\n        width: 240,\n        display: 'flex',\n        [\n            theme\n                .breakpoints\n                .down('sm')\n        ]: {\n            marginBottom: theme.spacing(2),\n            flexBasis: '100%'\n        }\n    },\n    avatar: {\n        marginRight: theme.spacing(2)\n    },\n    stats: {\n        padding: theme.spacing(1),\n        [\n            theme\n                .breakpoints\n                .down('sm')\n        ]: {\n            flexBasis: '50%'\n        }\n    },\n    actions: {\n        padding: theme.spacing(1),\n        [\n            theme\n                .breakpoints\n                .down('sm')\n        ]: {\n            flexBasis: '50%'\n        }\n    }\n}));\n\nconst ProjectCard = props => {\n    const {\n        project,\n        className,\n        ...rest\n    } = props;\n\n    const classes = useStyles();\n\n    const statusColors = {\n        'Working': \"#75B72B\",\n        \"Not Working\": colors.grey[600],\n    };\n\n    return (\n        <Card {...rest} className={clsx(classes.root, className)}>\n            <CardContent className={classes.content}>\n                <div className={classes.header}>\n                    <Avatar alt=\"Author\" className={classes.avatar} src={project.author.avatar}>\n                        {getInitials(project.author.name)}\n                    </Avatar>\n                    <div>\n                        <Link color=\"textPrimary\" component={RouterLink} noWrap to=\"#\" variant=\"h5\">\n                           Full Name\n                        </Link>\n                        <Typography variant=\"body2\">\n                            Experience{' '}\n                            <Link\n                                color=\"textPrimary\"\n                                component={RouterLink}\n                                to=\"/management/customers/1\"\n                                variant=\"h6\">\n                                Experience\n                            </Link>\n                        </Typography>\n                    </div>\n                </div>\n                <div className={classes.stats}>\n                    <Typography variant=\"h6\">\n                       Planned\n                    </Typography>\n                    <Typography variant=\"body2\">Project price</Typography>\n                </div>\n                <div className={classes.stats}>\n                    <Typography variant=\"h5\">Boss</Typography>\n                    <Typography variant=\"body2\">Class</Typography>\n                </div>\n                <div className={classes.stats}>\n                    <Typography variant=\"h6\">\n                        4541452154\n                    </Typography>\n                    <Typography variant=\"body2\">GSM</Typography>\n                </div>\n                <div className={classes.stats}>\n                    <Typography variant=\"h6\">\n                        01.01.1960\n                    </Typography>\n                    <Typography variant=\"body2\">Birthday</Typography>\n                </div>\n                <div className={classes.stats}>\n                    <Typography\n                        style={{\n                        color: statusColors[\"Working\"]\n                    }}\n                        variant=\"h6\">\n                        Working Time\n                    </Typography>\n                    <Typography variant=\"body2\">Project status</Typography>\n                </div>\n                <div className={classes.actions}>\n                    <Button color=\"primary\" size=\"small\" variant=\"outlined\">\n                        View\n                    </Button>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nProjectCard.propTypes = {\n    className: PropTypes.string,\n    project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Page, SearchBar } from 'components';\nimport { Header, ProjectCard } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n}));\n\nconst ProjectManagementList = () => {\n  const classes = useStyles();\n  const [rowsPerPage] = useState(10);\n  const [page] = useState(0);\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      axios.get('/api/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      <div className={classes.results}>\n        {projects.map(project => (\n          <ProjectCard\n            key={project.id}\n            project={project}\n          />\n        ))}\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectManagementList;\n","export { default } from './ProjectManagementList';\n"],"sourceRoot":""}