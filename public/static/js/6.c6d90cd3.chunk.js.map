{"version":3,"sources":["../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["Snackbar","React","forwardRef","props","ref","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","other","_objectWithoutProperties","timerAutoHide","useRef","_React$useState","useState","exited","setExited","handleClose","useEventCallback","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","window","addEventListener","removeEventListener","createElement","ClickAwayListener","_extends","onClickAway","event","clsx","root","concat","capitalize","appear","in","createChainedFunction","timeout","direction","SnackbarContent","withStyles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","_defineProperty","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","name","_props$role","role","Paper","component","Typography","variant","variantMapping","body1","body2","square","elevation","emphasis","palette","type","backgroundColor","emphasize","background","default","color","getContrastText","flexWrap","padding","borderRadius","shape","flexGrow","minWidth","marginLeft","paddingLeft","marginRight","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$disabled","disabled","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","checked","cloneElement","fontSize","text","secondary","colorPrimary","primary","main","fade","hoverOpacity","colorSecondary","Switch","_props$edge","edge","thumb","start","edgeStart","end","edgeEnd","small","switchBase","input","track","width","height","overflow","boxSizing","flexShrink","verticalAlign","grey","transition","transitions","create","shortest","opacity","common","black","white","sizeSmall","boxShadow","shadows"],"mappings":"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","file":"static/js/6.c6d90cd3.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, {}, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, {}, left3)))\n  };\n};\nvar Snackbar = React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      autoHideDuration = props.autoHideDuration,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    onClose.apply(void 0, arguments);\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!handleClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['top', 'bottom']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"timeout\"` (`autoHideDuration` expired) or: `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport Typography from '../Typography';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    }),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return React.createElement(Paper, _extends({\n    component: Typography,\n    variant: \"body2\",\n    variantMapping: {\n      body1: 'div',\n      body2: 'div'\n    },\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The role of the SnackbarContent. If the Snackbar requires focus\n   * to be closed, the `alertdialog` role should be used instead.\n   */\n  role: PropTypes.oneOf(['alert', 'alertdialog'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"disabled\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref,\n    disabled: disabled\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disabled\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref,\n    disabled: disabled\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}