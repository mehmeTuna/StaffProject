{"version":3,"sources":["components/Header.js","components/Staff/FilterModal.js","components/Staff/HeroAvatar.js","components/Staff/StaffDefinitionPaged/Porgress.js","components/Staff/StaffDefine.js","components/Staff/StaffDefinitionEditorModal.js","components/Staff/StaffCarerList.js","components/Staff/StaffEmploymentHistory.js","components/Staff/StaffAbout.js","components/StaffList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","FilterModal","scrollType","React","useState","open","setOpen","scroll","setScroll","handleClose","gilad","jason","antoine","state","setState","handleChange","name","event","target","checked","Date","selectedDate","setSelectedDate","handleDateChange","date","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","dividers","Grid","container","direction","justify","alignItems","Box","utils","DateFnsUtils","disableToolbar","format","margin","label","value","onChange","KeyboardButtonProps","FormControl","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","DialogActions","card","maxWidth","media","width","height","MediaCard","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","size","Progress","props","progress","formControl","minWidth","selectEmpty","marginTop","StaffDefine","age","setAge","handleChangeEvent","step","noValidate","autoComplete","m","TextField","fullWidth","placeholder","multiline","type","InputLabelProps","shrink","Select","displayEmpty","MenuItem","disabled","FormHelperText","StaffDefinitionEditorModal","MuiVirtualizedTable","getRowClassName","index","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","tableCell","noClick","style","align","numeric","headerRenderer","headerHeight","this","tableProps","gridStyle","table","rowClassName","map","dataKey","other","key","headerProps","PureComponent","defaultProps","VirtualizedTable","withStyles","display","boxSizing","flip","paddingRight","undefined","cursor","backgroundColor","palette","grey","flex","sample","createData","dessert","calories","fat","carbs","protein","factor","pay","totalTime","workingClass","ended","rows","i","randomSelection","Math","floor","random","length","push","StaffCareerList","Paper","rowCount","rowGetter","commet","status","operationTime","StaffAbout","data","Staff","Fragment","marginBottom","fontSize","textColor","opacity","fontWeight","UserList","user","border","borderRadius","borderColor","p","img","Avatar","alt","src","marginLeft","FullName","Alias","Class","Experience","Status","StaffList","userListData","Gender","CreationTime","Password","Birthday","Age","MartialStatus","Gsm","ProcessTime","Working","userList","mx","xs","md","lg","Component","createMuiTheme","primary","main","trTR","App","ThemeProvider","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.769e6a95.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\">\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Header\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Staff List\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nexport default function FilterModal() {\r\n    const [open,\r\n        setOpen] = React.useState(false);\r\n    const [scroll,\r\n        setScroll] = React.useState('paper');\r\n\r\n    const handleClickOpen = scrollType => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [state,\r\n        setState] = React.useState({gilad: true, jason: false, antoine: false});\r\n\r\n    const handleChange = name => event => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    const {gilad, jason, antoine} = state;\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const {current: descriptionElement} = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"primary\" onClick={handleClickOpen('body')}>\r\n                <CreateIcon/>\r\n                Filters\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\">\r\n                <DialogTitle id=\"scroll-dialog-title\">Filter</DialogTitle>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n                        <Box>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n                                    <Box marginRight={3}>\r\n                                        <KeyboardDatePicker\r\n                                            disableToolbar\r\n                                            variant=\"inline\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-inline\"\r\n                                            label=\"Start\"\r\n                                            value={selectedDate}\r\n                                            onChange={handleDateChange}\r\n                                            KeyboardButtonProps={{\r\n                                            'aria-label': 'change date'\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        <KeyboardDatePicker\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-dialog\"\r\n                                            label=\"Finish\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            value={selectedDate}\r\n                                            onChange={handleDateChange}\r\n                                            KeyboardButtonProps={{\r\n                                            'aria-label': 'change date'\r\n                                        }}/>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        gilad\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('gilad')\r\n                                    }\r\n                                    value = \"gilad\" />}\r\n                                        label=\"Unspecified\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        jason\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('jason')\r\n                                    }\r\n                                    value = \"jason\" />}\r\n                                        label=\"Female\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Male\"/>\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Experience Filter</FormLabel>\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        gilad\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('gilad')\r\n                                    }\r\n                                    value = \"gilad\" />}\r\n                                        label=\"Unspecified\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        jason\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('jason')\r\n                                    }\r\n                                    value = \"jason\" />}\r\n                                        label=\"Manager\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Operator\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Staff\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Boss\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Other\"/>\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Work Type Filter</FormLabel>\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        gilad\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('gilad')\r\n                                    }\r\n                                    value = \"gilad\" />}\r\n                                        label=\"Free Time\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        jason\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('jason')\r\n                                    }\r\n                                    value = \"jason\" />}\r\n                                        label=\"Planned\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Full Time\"/>\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Still Working</FormLabel>\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        gilad\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('gilad')\r\n                                    }\r\n                                    value = \"gilad\" />}\r\n                                        label=\"Yes\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        jason\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChange('jason')\r\n                                    }\r\n                                    value = \"jason\" />}\r\n                                        label=\"No\"/>\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        <SearchIcon/>\r\n                        Uygula\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    width:250,\r\n    height: 200,\r\n  },\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Photo\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <AddIcon />\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <DeleteIcon/>\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Progress(props) {\r\n    const progress = props.progress;\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            <Box>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    {progress.title}\r\n                </Typography>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport HeroAvatar from './HeroAvatar';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nimport Progress from \"./StaffDefinitionPaged/Porgress\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function StaffDefine() {\r\n    const user = {\r\n        title: \"Staff Define\",\r\n        step: 2\r\n    }\r\n\r\n    // The first commit of Material-UI\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [age,\r\n        setAge] = React.useState('');\r\n\r\n    const [state,\r\n        setState] = React.useState({gilad: true, jason: false, antoine: false});\r\n    const {gilad, jason, antoine} = state;\r\n\r\n    const handleChange = event => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    const handleChangeEvent = name => event => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.checked\r\n        });\r\n    };\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            <Box>\r\n                <Progress progress={user}/>\r\n            </Box>\r\n            <Box>\r\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Box m={1}><TextField id=\"standard-basic\" label=\"Fore Name\"/></Box>\r\n                            <Box m={1}><TextField id=\"standard-basic\" label=\"Middle Name\"/></Box>\r\n                            <Box m={1}><TextField id=\"standard-b asic\" label=\"Last Name\"/></Box>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Box minWidth=\"40%\" m={1}><TextField fullWidth id=\"standard-b asic\" label=\"Email\"/></Box>\r\n                            <Box minWidth=\"45%\" m={1}>\r\n                                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                    <Box>\r\n                                        <TextField id=\"standard-b asic\" label=\"Password\"/>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        <Button variant=\"contained\" color=\"primary\">\r\n                                            Set Password\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Box m={1}>\r\n                                <TextField\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Adress\"\r\n                                    placeholder=\"Adress\"\r\n                                    multiline/>\r\n                            </Box>\r\n                            <Box m={1}>\r\n                                <TextField\r\n                                    id=\"filled-number\"\r\n                                    label=\"Telephone\"\r\n                                    type=\"number\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true\r\n                                }}/>\r\n                            </Box>\r\n                            <Box m={1}>\r\n                                <TextField\r\n                                    id=\"filled-number\"\r\n                                    label=\"Gsm\"\r\n                                    type=\"number\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true\r\n                                }}/>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Box m={1}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <Select\r\n                                        value={age}\r\n                                        onChange={handleChange}\r\n                                        displayEmpty\r\n                                        className={classes.selectEmpty}>\r\n                                        <MenuItem value=\"\" disabled>\r\n                                            Gender\r\n                                        </MenuItem>\r\n                                        <MenuItem value={10}>Unspecified</MenuItem>\r\n                                        <MenuItem value={20}>Mela</MenuItem>\r\n                                        <MenuItem value={30}>Female</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText></FormHelperText>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box m={1}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <Select\r\n                                        value={age}\r\n                                        onChange={handleChange}\r\n                                        displayEmpty\r\n                                        className={classes.selectEmpty}>\r\n                                        <MenuItem value=\"\" disabled>\r\n                                            Martial Status\r\n                                        </MenuItem>\r\n                                        <MenuItem value={10}>Unspecified</MenuItem>\r\n                                        <MenuItem value={20}>Single</MenuItem>\r\n                                        <MenuItem value={30}>Married</MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText></FormHelperText>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box m={1}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Birthday\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/>\r\n                                </MuiPickersUtilsProvider>\r\n                            </Box>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n            </Box>\r\n            <Box>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <Box m={1}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Select\r\n                                value={age}\r\n                                onChange={handleChange}\r\n                                displayEmpty\r\n                                className={classes.selectEmpty}>\r\n                                <MenuItem value=\"\" disabled>\r\n                                    Experience\r\n                                </MenuItem>\r\n                                <MenuItem value={10}>Unspecified</MenuItem>\r\n                                <MenuItem value={20}>Mela</MenuItem>\r\n                                <MenuItem value={30}>Female</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText></FormHelperText>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <TextField\r\n                            id=\"filled-number\"\r\n                            label=\"Periode\"\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                            shrink: true\r\n                        }}/>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Select\r\n                                value={age}\r\n                                onChange={handleChange}\r\n                                displayEmpty\r\n                                className={classes.selectEmpty}>\r\n                                <MenuItem value=\"\" disabled>\r\n                                    Factor\r\n                                </MenuItem>\r\n                                <MenuItem value={10}>Unspecified</MenuItem>\r\n                                <MenuItem value={20}>Mela</MenuItem>\r\n                                <MenuItem value={30}>Female</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText></FormHelperText>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box m={1}>\r\n                        <TextField\r\n                            id=\"filled-number\"\r\n                            label=\"Pay\"\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                            shrink: true\r\n                        }}/>\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n            <Box>\r\n                <Box>\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                        <Box marginRight={5}>\r\n                            <HeroAvatar/>\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                                <FormLabel component=\"legend\">Working Time Conditions</FormLabel>\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        gilad\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChangeEvent('gilad')\r\n                                    }\r\n                                    value = \"gilad\" />}\r\n                                        label=\"Free Time\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        jason\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChangeEvent('jason')\r\n                                    }\r\n                                    value = \"jason\" />}\r\n                                        label=\"Planned Time\"/>\r\n                                    <FormControlLabel\r\n                                        control={< Checkbox checked = {\r\n                                        antoine\r\n                                    }\r\n                                    onChange = {\r\n                                        handleChangeEvent('antoine')\r\n                                    }\r\n                                    value = \"antoine\" />}\r\n                                        label=\"Full Time\"/>\r\n                                </FormGroup>\r\n                                <FormHelperText>\r\n                                    <Button variant=\"contained\" color=\"primary\">\r\n                                        <DescriptionIcon/>\r\n                                        Generate\r\n                                    </Button>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport StaffDefine from \"./StaffDefine\";\r\n\r\nexport default function StaffDefinitionEditorModal() {\r\n    const [fullWidth] = React.useState(true);\r\n    const [maxWidth] = React.useState('md');\r\n    const [open,\r\n        setOpen] = React.useState(false);\r\n    const [scroll,\r\n        setScroll] = React.useState('paper');\r\n\r\n\r\n    const handleClickOpen = scrollType => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const {current: descriptionElement} = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"primary\" onClick={handleClickOpen('body')}>\r\n                <CreateIcon/>\r\n                add new staff\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\">\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                     <StaffDefine/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                       Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0px !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\n// ---\r\n\r\nconst sample = [\r\n  ['Boss: Founder',\"25.10.2019 19.47.44\",\"--\",\"25.10.2019 19.47.44\", 4, \"week\",500,0,\"Free-Time\",\"No\"],\r\n  ['Boss: Founder',\"10.10.2019 19.47.44\",\"--\",\"25.10.2019 19.47.44\", 4, \"week\",400,0,\"Free-Time\",\"Yes\"],\r\n];\r\n\r\nfunction createData(id, dessert, calories, fat, carbs, protein, factor, pay, totalTime, workingClass, ended) {\r\n  return { id, dessert, calories, fat, carbs, protein, factor, pay, totalTime, workingClass, ended };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 10; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n}\r\n\r\nexport default function StaffCareerList() {\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%', }}>\r\n      <VirtualizedTable\r\n        rowCount={rows.length}\r\n        rowGetter={({ index }) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Experience Identifier',\r\n            dataKey: 'dessert',\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Begin Time',\r\n            dataKey: 'calories',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'End Time',\r\n            dataKey: 'fat',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Adjust Time',\r\n            dataKey: 'carbs',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Periode',\r\n            dataKey: 'protein',\r\n            numeric: true,\r\n          },{\r\n            width:120,\r\n            label: \"Factor\",\r\n            dataKey:\"factor\",\r\n            numeric:true,\r\n          },{\r\n            width:120,\r\n            label:\"Pay(TL)\",\r\n            dataKey:\"pay\",\r\n            numeric:true,\r\n          },{\r\n            width:120,\r\n            label:\"Total Time\",\r\n            dataKey:\"totalTime\",\r\n            numeric:true,\r\n          },{\r\n            width:120,\r\n            label:\"Work Class\",\r\n            dataKey: \"workingClass\",\r\n            numeric: false,\r\n          },{\r\n              width:120,\r\n              label:\"Ended\",\r\n              dataKey: \"ended\",\r\n              numeric: false\r\n          }\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0px !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\n// ---\r\n\r\nconst sample = [\r\n  ['Staff Was Dismissed',\"Dismiss\",\"25.10.2019 19.47.44\"],\r\n  ['Staff Was Dismissed',\"Dismiss\",\"10.10.2019 19.47.44\"],\r\n];\r\n\r\nfunction createData(id, commet, status, operationTime ) {\r\n  return { id, commet, status, operationTime  };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 10; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n}\r\n\r\nexport default function StaffCareerList() {\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%', }}>\r\n      <VirtualizedTable\r\n        rowCount={rows.length}\r\n        rowGetter={({ index }) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Commet',\r\n            dataKey: 'commet',\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Status',\r\n            dataKey: 'status',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Operation Time',\r\n            dataKey: 'operationTime',\r\n            numeric: true,\r\n          },\r\n\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Box} from '@material-ui/core';\r\n\r\nimport StaffCareerList from \"./StaffCarerList\";\r\nimport StaffEmploymentHistory from \"./StaffEmploymentHistory\";\r\n\r\nexport default function StaffAbout(data) {\r\n    const staff = data.Staff;\r\n    const [open,\r\n        setOpen] = React.useState(false);\r\n    const [fullWidth] = React.useState(true);\r\n    const [maxWidth] = React.useState('lg');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button color=\"primary\" onClick={handleClickOpen}>\r\n                <InfoIcon/>\r\n                Details\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogContent>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <Box>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Close\r\n                            </Button>\r\n                        </Box>\r\n                        <Box>\r\n                            Staff Detail\r\n                        </Box>\r\n                        <Box></Box>\r\n                    </Grid>\r\n                    <Box>\r\n                        <Box marginBottom={5} fontSize=\"2em\">\r\n                            <Box>Staff Carer List</Box>\r\n                            <Button variant=\"contained\" size=\"medium\" color=\"primary\">\r\n                                Add Career Entry\r\n                            </Button>\r\n                        </Box>\r\n                        <StaffCareerList/>\r\n                    </Box>\r\n                    <Box>\r\n                        <Box marginBottom={5} fontSize=\"2em\">\r\n                            <Box>Staff Employment History</Box>\r\n                            <Button variant=\"contained\" size=\"medium\" color=\"primary\">\r\n                                Recruit\r\n                            </Button>\r\n                            <Button variant=\"contained\" size=\"medium\" color=\"primary\">\r\n                                Dismiss\r\n                            </Button>\r\n                        </Box>\r\n                        <StaffEmploymentHistory/>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport FilterModal from \"./Staff/FilterModal\";\r\nimport StaffDefinitionEditorModal from \"./Staff/StaffDefinitionEditorModal\";\r\nimport StaffAbout from \"./Staff/StaffAbout\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textColor: {\r\n        opacity: .8,\r\n        fontWeight: \"bold\",\r\n        color: \"#495057\"\r\n    }\r\n}));\r\n\r\nfunction UserList(data) {\r\n    const classes = useStyles();\r\n\r\n    let user = data.user;\r\n    return <Box border={1} borderRadius={10} borderColor={\"#E5E8E9\"} p={1} marginTop={1}>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n            <Box>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                    <Box marginRight={2} component=\"div\" display=\"inline\">\r\n                        {user.img === undefined\r\n                            ? <Avatar>H</Avatar>\r\n                            : <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>}\r\n                    </Box>\r\n                    <Box>\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                            <Box>\r\n                                <Grid container direction=\"column\" justify=\"flex-end\" alignItems=\"flex-start\">\r\n                                    <Box className={classes.textColor}>\r\n                                        Full Name\r\n                                    </Box>\r\n                                    <Box className={classes.textColor}>\r\n                                        Alias\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Box>\r\n                            <Box marginLeft={1}>\r\n                                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                                    <Box>\r\n                                        {user.FullName}\r\n                                    </Box>\r\n                                    <Box>\r\n                                        {user.Alias}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n            <Box>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <Box>\r\n                        <Grid container direction=\"column\" justify=\"flex-end\" alignItems=\"flex-start\">\r\n                            <Box className={classes.textColor}>\r\n                                Class\r\n                            </Box>\r\n                            <Box className={classes.textColor}>\r\n                                Experience\r\n                            </Box>\r\n                            <Box className={classes.textColor}>\r\n                                Status\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box marginLeft={1}>\r\n                        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                            <Box>\r\n                                {user.Class}\r\n                            </Box>\r\n                            <Box>\r\n                                {user.Experience}\r\n                            </Box>\r\n                            <Box>\r\n                                {user.Status}\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n            <Box>\r\n                <StaffAbout Staff={user}/>\r\n            </Box>\r\n        </Grid>\r\n    </Box>;\r\n}\r\n\r\nexport default class StaffList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userListData: [\r\n                {\r\n                    Alias: \"Bulent\",\r\n                    FullName: \"Bulent Colak\",\r\n                    Gender: \"Male\",\r\n                    CreationTime: \"25.10.2019 20:39:42\",\r\n                    Password: \"Assigned\",\r\n                    Staff: \"Bulent Colak\",\r\n                    Birthday: \"25.10.1974\",\r\n                    Age: \"45\",\r\n                    MartialStatus: \"Unspesified\",\r\n                    Gsm: \"0072 7292641\",\r\n                    Class: \"Boss\",\r\n                    Experience: \"FOUNDER\",\r\n                    Status: \"Recruitment\",\r\n                    ProcessTime: \"25.10.2019 19:47:44\",\r\n                    Working: true\r\n                }, {\r\n                    Alias: \"Bulent\",\r\n                    FullName: \"Mehmet Tuna\",\r\n                    Gender: \"Male\",\r\n                    CreationTime: \"25.10.2019 20:39:42\",\r\n                    Password: \"Assigned\",\r\n                    Staff: \"Bulent Colak\",\r\n                    Birthday: \"25.10.1974\",\r\n                    Age: \"45\",\r\n                    MartialStatus: \"Unspesified\",\r\n                    Gsm: \"0072 7292641\",\r\n                    Class: \"Boss\",\r\n                    Experience: \"FOUNDER\",\r\n                    Status: \"Recruitment\",\r\n                    ProcessTime: \"25.10.2019 19:47:44\",\r\n                    Working: false\r\n                }\r\n            ]\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const userList = this\r\n            .state\r\n            .userListData\r\n            .map((data, key) => <UserList key={key} user={data}/>);\r\n        return (\r\n            <Box\r\n                mx=\"auto\"\r\n                marginTop=\"2em\"\r\n                width={{\r\n                xs: \"100%\",\r\n                md: \"90%\",\r\n                lg: \"85%\"\r\n            }}>\r\n                <Box>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <StaffDefinitionEditorModal/>\r\n                        <FilterModal/>\r\n                    </Grid>\r\n                </Box>\r\n                <Box minWidth={600}>\r\n                    {userList}\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n};\r\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\nimport {trTR} from \"@material-ui/core/locale\";\n\nimport Header from './components/Header';\nimport StaffList from './components/StaffList';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#1976d2\"\n        }\n    }\n}, trTR);\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Header/>\n            <Switch>\n                <Route path='/Staff-List' component={StaffList}/>\n                <Route path=\"/\" component={StaffList}/>\n            </Switch>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App/>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}