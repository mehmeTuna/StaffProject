{"version":3,"sources":["components/Header.js","components/LeftMenu.js","components/Staff/HeroAvatar.js","components/StaffDefinitionEditor.js","components/Staff/FilterModal.js","components/Staff/StaffDefinitionEditorModal.js","components/StaffCareerList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","iconRight","card","media","height","MediaCard","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","CardActions","size","CssTextField","withStyles","borderBottomColor","borderColor","TextField","marginLeft","marginTop","margin","input","minWidth","working","formControl","selectEmpty","StaffDefinitionEditor","React","useState","value","setValue","inputLabel","useRef","age","handleChange","event","target","Date","selectedDate","setSelectedDate","labelWidth","setLabelWidth","useEffect","current","offsetWidth","noValidate","Grid","container","direction","justify","alignItems","Box","p","label","id","display","flexDirection","border","m","FormControl","FormLabel","RadioGroup","name","onChange","row","FormControlLabel","control","Radio","labelPlacement","utils","DateFnsUtils","format","date","KeyboardButtonProps","fullWidth","InputLabel","ref","Select","labelId","MenuItem","getModalStyle","top","left","transform","boxShadow","shadows","padding","FilterModal","modalStyle","open","setOpen","gilad","jason","antoine","state","setState","checked","filter","v","length","handleDateChange","Modal","aria-labelledby","aria-describedby","onClose","style","FormGroup","Checkbox","disableToolbar","UserList","data","user","borderRadius","undefined","img","Avatar","alt","src","FullName","Alias","StaffCareerList","props","userListData","Gender","CreationTime","Password","Staff","Birthday","Age","MartialStatus","Gsm","Class","Experience","Status","ProcessTime","showFilter","showDefiniton","userList","this","map","key","onClick","Component","createMuiTheme","primary","main","trTR","App","ThemeProvider","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3deba087.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\">\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Header\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        O an yapılan işlem yazılabilir buraya\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 250,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4)\r\n    },\r\n    iconRight: {\r\n        marginRight: 10\r\n    }\r\n}));\r\n\r\nexport default function LeftMenu() {\r\n    const classes = useStyles();\r\n    const [open,\r\n        setOpen] = React.useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={< ListSubheader component = \"div\" id = \"nested-list-subheader\" > İşlemler </ListSubheader>}\r\n            className={classes.root}>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Business Authorized Staff List\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Business Defined Experiences List\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Business Editor\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Business MinWage List\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Business Relay Editor\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Career Editor\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staff Career List\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staf fDefinition Editort\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staff Editor\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staf Employment History\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staff Identity Card\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staff List\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText\r\n                    primary=\"Staff Progress Payment Calculator And Definition Editor\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Staff Progress Payment History List\"/>\r\n            </ListItem>\r\n            <ListItem button dense component=\"a\" href=\"#\">\r\n                <ListItemIcon>\r\n                    <SendIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Staff Time IO Report\"/>\r\n            </ListItem>\r\n            <ListItem button onClick={handleClick}>\r\n                <SendIcon className={classes.iconRight}/>\r\n                <ListItemText primary=\"Inbox\"/> {open\r\n                    ? <ExpandLess/>\r\n                    : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested}>\r\n                        <ListItemIcon>\r\n                            <StarBorder/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Starred\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </List>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    width:200,\r\n    height: 250,\r\n  },\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Photo\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <AddIcon />\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <DeleteIcon/>\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Box from '@material-ui/core/Box';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nimport HeroAvatar from './Staff/HeroAvatar';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'green'\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'black'\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'blue'\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'green'\r\n            }\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginLeft: 10,\r\n        marginTop: 30\r\n    },\r\n    margin: {\r\n        marginTop: 5\r\n    },\r\n    input: {\r\n        width: \"48%\",\r\n        marginRight: 10,\r\n        minWidth: 200\r\n    },\r\n    working: {\r\n        marginTop: 10\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function StaffDefinitionEditor() {\r\n    const classes = useStyles();\r\n    const [value,\r\n        setValue] = React.useState('female');\r\n    const inputLabel = React.useRef(null);\r\n    const [age,\r\n        setAge] = React.useState('');\r\n\r\n    const handleChange = event => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    // The first commit of Material-UI\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n    const [labelWidth,\r\n        setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n    return (\r\n        <form className={classes.root} noValidate>\r\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                <Box p={1}>\r\n                    <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\r\n                        <CssTextField\r\n                            className={classes.margin}\r\n                            label=\"Fore Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"/>\r\n                        <CssTextField\r\n                            className={classes.margin}\r\n                            label=\"Middle Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"/>\r\n                        <CssTextField\r\n                            className={classes.margin}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"/>\r\n                    </Grid>\r\n                    <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\r\n                            <Box border={1} p={1} m={1}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-label=\"position\"\r\n                                        name=\"position\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                        row>\r\n                                        <FormControlLabel\r\n                                            value=\"unspesified\"\r\n                                            control={< Radio color = \"primary\" />}\r\n                                            label=\"Unspesified\"\r\n                                            labelPlacement=\"end\"/>\r\n                                        <FormControlLabel\r\n                                            value=\"female\"\r\n                                            control={< Radio color = \"primary\" />}\r\n                                            label=\"Female\"\r\n                                            labelPlacement=\"end\"/>\r\n                                        <FormControlLabel\r\n                                            value=\"male\"\r\n                                            control={< Radio color = \"primary\" />}\r\n                                            label=\"Male\"\r\n                                            labelPlacement=\"end\"/>\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box border={1} p={1} m={1}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">MartialStatus</FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-label=\"position\"\r\n                                        name=\"position\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                        row>\r\n                                        <FormControlLabel\r\n                                            value=\"unspesified\"\r\n                                            control={< Radio color = \"primary\" />}\r\n                                            label=\"Unspesified\"\r\n                                            labelPlacement=\"end\"/>\r\n                                        <FormControlLabel\r\n                                            value=\"single\"\r\n                                            control={< Radio color = \"primary\" />}\r\n                                            label=\"Single\"\r\n                                            labelPlacement=\"end\"/>\r\n                                        <FormControlLabel\r\n                                            value=\"married\"\r\n                                            control={< Radio color = \"primary\" />}\r\n                                            label=\"Married\"\r\n                                            labelPlacement=\"end\"/>\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box>\r\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                            <Box>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Birthday:\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                        'aria-label': 'change date'\r\n                                    }}/>\r\n                                </MuiPickersUtilsProvider>\r\n                            </Box>\r\n                            <Box className={classes.input}>\r\n                                <CssTextField\r\n                                    fullWidth\r\n                                    className={classes.margin}\r\n                                    label=\"Adress:\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"custom-css-outlined-input\"/>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box>\r\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                            <Box className={classes.input}>\r\n                                <CssTextField\r\n                                    fullWidth\r\n                                    className={classes.margin}\r\n                                    label=\"Telephone:\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"custom-css-outlined-input\"/>\r\n                            </Box>\r\n                            <Box className={classes.input}>\r\n                                <CssTextField\r\n                                    fullWidth\r\n                                    className={classes.margin}\r\n                                    label=\"GSM:\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"custom-css-outlined-input\"/>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box>\r\n                        <Grid container direction=\"row\" justify=\"space-start\" alignItems=\"center\">\r\n                            <Box className={classes.input}>\r\n                                <CssTextField\r\n                                    fullWidth\r\n                                    className={classes.margin}\r\n                                    label=\"Password:\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"custom-css-outlined-input\"/>\r\n                            </Box>\r\n                            <Box>\r\n                                <Button variant=\"contained\" color=\"primary\">\r\n                                    Set Password\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <Box>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"space-around\"\r\n                                alignItems=\"center\"\r\n                                className={classes.working}>\r\n                                <Box>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                        <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n                                            Experience\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={age}\r\n                                            onChange={handleChange}\r\n                                            labelWidth={labelWidth}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Experience</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={10}>Ten</MenuItem>\r\n                                            <MenuItem value={20}>Twenty</MenuItem>\r\n                                            <MenuItem value={30}>Thirty</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <CssTextField\r\n                                        className={classes.margin}\r\n                                        label=\"Periode\"\r\n                                        variant=\"outlined\"\r\n                                        id=\"custom-css-outlined-input\"/>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                        <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n                                            Factor\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={age}\r\n                                            onChange={handleChange}\r\n                                            labelWidth={labelWidth}>\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Factor</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={10}>Ten</MenuItem>\r\n                                            <MenuItem value={20}>Twenty</MenuItem>\r\n                                            <MenuItem value={30}>Thirty</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <CssTextField\r\n                                        className={classes.margin}\r\n                                        label=\"Pay\"\r\n                                        variant=\"outlined\"\r\n                                        id=\"custom-css-outlined-input\"/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"space-around\"\r\n                                alignItems=\"center\"\r\n                                className={classes.working}>\r\n                                <Box>\r\n                                    <FormControl component=\"fieldset\">\r\n                                        <FormLabel component=\"legend\">Working Time Conditions</FormLabel>\r\n                                        <RadioGroup\r\n                                            aria-label=\"position\"\r\n                                            name=\"position\"\r\n                                            value={value}\r\n                                            onChange={handleChange}\r\n                                            row>\r\n                                            <FormControlLabel\r\n                                                value=\"unspesified\"\r\n                                                control={< Radio color = \"primary\" />}\r\n                                                label=\"Free Time\"\r\n                                                labelPlacement=\"end\"/>\r\n                                            <FormControlLabel\r\n                                                value=\"single\"\r\n                                                control={< Radio color = \"primary\" />}\r\n                                                label=\"Planned-Time\"\r\n                                                labelPlacement=\"end\"/>\r\n                                            <FormControlLabel\r\n                                                value=\"married\"\r\n                                                control={< Radio color = \"primary\" />}\r\n                                                label=\"Full-Time\"\r\n                                                labelPlacement=\"end\"/>\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </Box>\r\n                <Box m={2}>\r\n                    <HeroAvatar/>\r\n                </Box>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {top: `${top}%`, left: `${left}%`, transform: `translate(-${top}%, -${left}%)`};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: \"80%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}));\r\n\r\nexport default function FilterModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first\r\n    // render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open,\r\n        setOpen] = React.useState(true);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [state,\r\n        setState] = React.useState({gilad: true, jason: false, antoine: false});\r\n\r\n    const handleChange = name => event => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    const {gilad, jason, antoine} = state;\r\n    const error = [gilad, jason, antoine]\r\n        .filter(v => v)\r\n        .length !== 2;\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={open}\r\n            onClose={handleClose}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n                    <Box>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <FormLabel component=\"legend\">Gender</FormLabel>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    gilad\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('gilad')\r\n                                }\r\n                                value = \"gilad\" />}\r\n                                    label=\"Unspecified\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    jason\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('jason')\r\n                                }\r\n                                value = \"jason\" />}\r\n                                    label=\"Female\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    antoine\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('antoine')\r\n                                }\r\n                                value = \"antoine\" />}\r\n                                    label=\"Male\"/>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <FormLabel component=\"legend\">Experience Filter</FormLabel>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    gilad\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('gilad')\r\n                                }\r\n                                value = \"gilad\" />}\r\n                                    label=\"Unspecified\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    jason\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('jason')\r\n                                }\r\n                                value = \"jason\" />}\r\n                                    label=\"Manager\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    antoine\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('antoine')\r\n                                }\r\n                                value = \"antoine\" />}\r\n                                    label=\"Operator\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    antoine\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('antoine')\r\n                                }\r\n                                value = \"antoine\" />}\r\n                                    label=\"Staff\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    antoine\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('antoine')\r\n                                }\r\n                                value = \"antoine\" />}\r\n                                    label=\"Boss\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    antoine\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('antoine')\r\n                                }\r\n                                value = \"antoine\" />}\r\n                                    label=\"Other\"/>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <FormLabel component=\"legend\">Work Type Filter</FormLabel>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    gilad\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('gilad')\r\n                                }\r\n                                value = \"gilad\" />}\r\n                                    label=\"Free Time\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    jason\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('jason')\r\n                                }\r\n                                value = \"jason\" />}\r\n                                    label=\"Planned\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    antoine\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('antoine')\r\n                                }\r\n                                value = \"antoine\" />}\r\n                                    label=\"Full Time\"/>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box>\r\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                            <FormLabel component=\"legend\">Still Working</FormLabel>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    gilad\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('gilad')\r\n                                }\r\n                                value = \"gilad\" />}\r\n                                    label=\"Yes\"/>\r\n                                <FormControlLabel\r\n                                    control={< Checkbox checked = {\r\n                                    jason\r\n                                }\r\n                                onChange = {\r\n                                    handleChange('jason')\r\n                                }\r\n                                value = \"jason\" />}\r\n                                    label=\"No\"/>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Date picker inline\"\r\n                                    value={selectedDate}\r\n                                    onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                    'aria-label': 'change date'\r\n                                }}/>\r\n                                <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-dialog\"\r\n                                    label=\"Date picker dialog\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    value={selectedDate}\r\n                                    onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                    'aria-label': 'change date'\r\n                                }}/>\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n                    <Button color=\"primary\">\r\n                        <SearchIcon/> Uygula\r\n                    </Button>\r\n                </Grid>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport StaffDefinitionEditor from './../StaffDefinitionEditor';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {top: `${top}%`, left: `${left}%`, transform: `translate(-${top}%, -${left}%)`};\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: \"80%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    }\r\n}));\r\n\r\nexport default function FilterModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first\r\n    // render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open,\r\n        setOpen] = React.useState(true);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [state,\r\n        setState] = React.useState({gilad: true, jason: false, antoine: false});\r\n\r\n    const handleChange = name => event => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    const {gilad, jason, antoine} = state;\r\n    const error = [gilad, jason, antoine]\r\n        .filter(v => v)\r\n        .length !== 2;\r\n\r\n    const [selectedDate,\r\n        setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={open}\r\n            onClose={handleClose}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n                <StaffDefinitionEditor/>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport FilterModal from \"./Staff/FilterModal\";\r\nimport StaffDefinitionEditorModal from \"./Staff/StaffDefinitionEditorModal\";\r\n\r\nfunction UserList(data) {\r\n    let user = data.user;\r\n    return <Box border={1} borderRadius={10} borderColor={\"#E5E8E9\"} m={2} p={1}>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n            <Box>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                    <Box marginRight={2} component=\"div\" display=\"inline\">\r\n                        {user.img === undefined\r\n                            ? <Avatar>H</Avatar>\r\n                            : <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>}\r\n                    </Box>\r\n                    <Box>\r\n                        <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\r\n                            <Box>\r\n                                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                                    <Box>\r\n                                        Full Name: {user.FullName}\r\n                                    </Box>\r\n                                    <Box>\r\n                                        Alias: {user.Alias}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n            <Box>\r\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Button color=\"primary\">\r\n                        <InfoIcon/>\r\n                    </Button>\r\n                    <Button color=\"primary\">\r\n                        <CreateIcon/>\r\n                    </Button>\r\n                    <Button color=\"secondary\">\r\n                        <DeleteIcon/>\r\n                    </Button>\r\n                </Grid>\r\n            </Box>\r\n        </Grid>\r\n    </Box>;\r\n}\r\n\r\nexport default class StaffCareerList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userListData: [\r\n                {\r\n                    Alias: \"Bulent\",\r\n                    FullName: \"Bulent Colak\",\r\n                    Gender: \"Male\",\r\n                    CreationTime: \"25.10.2019 20:39:42\",\r\n                    Password: \"Assigned\",\r\n                    Staff: \"Bulent Colak\",\r\n                    Birthday: \"25.10.1974\",\r\n                    Age: \"45\",\r\n                    MartialStatus: \"Unspesified\",\r\n                    Gsm: \"0072 7292641\",\r\n                    Class: \"Boss\",\r\n                    Experience: \"FOUNDER\",\r\n                    Status: \"Recruitment\",\r\n                    ProcessTime: \"25.10.2019 19:47:44\"\r\n                }, {\r\n                    Alias: \"Bulent\",\r\n                    FullName: \"Mehmet Tuna\",\r\n                    Gender: \"Male\",\r\n                    CreationTime: \"25.10.2019 20:39:42\",\r\n                    Password: \"Assigned\",\r\n                    Staff: \"Bulent Colak\",\r\n                    Birthday: \"25.10.1974\",\r\n                    Age: \"45\",\r\n                    MartialStatus: \"Unspesified\",\r\n                    Gsm: \"0072 7292641\",\r\n                    Class: \"Boss\",\r\n                    Experience: \"FOUNDER\",\r\n                    Status: \"Recruitment\",\r\n                    ProcessTime: \"25.10.2019 19:47:44\"\r\n                }\r\n            ],\r\n            showFilter: false,\r\n            showDefiniton: false,\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const userList = this\r\n            .state\r\n            .userListData\r\n            .map((data, key) => <UserList key={key} user={data}/>);\r\n        return (\r\n            <div\r\n                style={{\r\n                width: '85%',\r\n                margin: \"auto\",\r\n                marginTop: 10\r\n            }}>\r\n\r\n                {this.state.showFilter === true && <FilterModal setOpen={true} />}\r\n                {this.state.showDefiniton === true && <StaffDefinitionEditorModal />}\r\n                <Box>\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <Button color=\"primary\" onClick={() => this.setState({showDefiniton: true})}>\r\n                            <CreateIcon/>\r\n                            add new staff\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={() => this.setState({showFilter: true})}>\r\n                            Filters\r\n                        </Button>\r\n                    </Grid>\r\n                </Box>\r\n                <Box>\r\n                    {userList}\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n};","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\nimport {trTR} from \"@material-ui/core/locale\";\nimport Box from '@material-ui/core/Box';\n\nimport Header from './components/Header';\nimport LeftMenu from './components/LeftMenu';\nimport StaffDefinitionEditor from './components/StaffDefinitionEditor';\nimport StaffCareerList from './components/StaffCareerList';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#1976d2\"\n        }\n    }\n}, trTR);\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Header/>\n            <Switch>\n                <Route path='/Staff-Career-List' component={StaffCareerList}/>\n                <Route path='/Staff-Definition' component={StaffDefinitionEditor}/>\n                <Route path=\"/\" component={StaffCareerList}/>\n            </Switch>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App/>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}